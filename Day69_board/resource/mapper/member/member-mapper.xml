<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- namespace : mapper 파일이 여러개인 경우 구분 가능 -->
<mapper namespace="mybatis">
	<select id="loginMember" parameterType="Member" resultType="Member"><!-- parameterType 들어올때 타입/resultType 나갈 때 타임 -->
		<!-- select * 사용 불가 / 컬럼명과 객체 변수명이 일치하면 가능하긴 함 -->
		<!-- as를 이용해 변수명과 컬럼명을 통일시켜야 사용 가능함 -->
		select member_no as memberNo, member_id as memberId, member_pw as memberPw, member_name as memberName, member_addr as memberAddr, reg_date as regDate
		from member where member_id = #{memberId} and member_pw = #{memberPw}
	</select>
	<select id="selectAllMember" resultType="Member"><!-- ArrayList로 리턴 ㄴㄴ 그 안에 들어갈 객체 타입을 적어줘야 함//받아온 값이 없기 떄문에 parameterType은 안적어도 됨 -->
		select member_no as memberNo, member_id as memberId, member_pw as memberPw, member_name as memberName, member_addr as memberAddr, reg_date as regDate
		from member
	</select>
	
	
	
	<insert id="insertMember" parameterType="Member">
		insert into member values(
			member_seq.nextval, 
			#{memberId}, 
			#{memberPw}, 
			#{memberName}, 
			#{memberAddr},
			sysdate
		)
	</insert>
	
	
	<update id="updateMember" parameterType="Member">
		update member set
			member_pw = #{memberPw},
			member_addr = #{memberAddr}
			where member_id= #{memberId}
	</update>
	
	<!-- mybatis의 내장객체로 java의 String이 string이기때문에 고거 파라미터타입에 넘겨줌 -->
	<delete id="deleteMember" parameterType="string">
		delete from member where member_id = #{memberId}
	</delete>
	
	
	
	<select id="checkMemberList" parameterType="org.kh.member.model.vo.Check" resultType="Member">
		select member_no as memberNo,
			<if test="ckId!=null and ckId.equals('on')">
				member_id as memberId,
			</if>
			<if test="ckPw!=null and ckPw.equals('on')">
				member_pw as memberPw,
			</if>
			<if test="ckName!=null and ckName.equals('on')">
				member_name as memberName,
			</if>
			<if test="ckName!=null and ckName.equals('on')">
				member_addr as memberAddr,
			</if>
			reg_date as regDate
			from member
	</select>
	
	
	
	<select id="searchMember" parameterType="org.kh.member.model.vo.Search" resultType="Member">
		select member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_addr as memberAddr,
			reg_date as regDate
			from member
			<choose>
				<when test="select.equals('name')">
					where member_name like '%'||#{keyword}||'%'
				</when>
				<when test="select.equals('id')">
					where member_id like '%'||#{keyword}||'%'
				</when>
			</choose>
	</select>
	
	
		
	<select id="searchMember2" parameterType="org.kh.member.model.vo.Search2" resultType="Member">
		select member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_addr as memberAddr,
			reg_date as regDate
			from member

			<!-- 앞에 무조건 where을 붙이고 and나 or이 있으면 지운다 -->
			<trim prefix="where" prefixOverrides="and|or">
				<if test="name!=null and name!=''">
					member_name like '%'||#{name}||'%'
				</if>
				<if test="addr!=null and addr!=''">
					and member_addr like '%'||#{addr}||'%'
				</if>
			</trim>
	</select>
	
	
	
	<select id="searchMember3" resultType="Member">
		select member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_addr as memberAddr,
			reg_date as regDate
			from member where member_addr in
			<!-- collection타입이 array인 배열의 값을 addr에 하나씩 넣고 처음엔 (를 마지막엔 )를 반복마다,를 넣는다 -->
			<foreach collection="array" item="addr" open="(" separator="," close=")">
				#{addr}
			</foreach>
	</select>
	
	
	
	
</mapper>
